#!/usr/bin/env bash
set -e

VERSION=3.5
BASEDIR=$PWD
ROOTFS=$BASEDIR/ROOTFS

install_shlibs() {
SHLIBS=""
SHLIBS+=" $ROOTFS/python.so "
SHLIBS+=" `find $ROOTFS -iname '*\.so' | grep -v '/site-packages/'` "
set +e
SHLIBS+=" `find $ROOTFS -iname '*\.so[\.0-9]*' | grep -v '/site-packages/'` "
set -e
SHLIBS_COUNT="`echo \"$SHLIBS\" | wc -l`"

ldd $SHLIBS | grep -Po '(?<=> )/[^ ]+' | sort | uniq | grep -Pv 'lib(c|gcc|dl|m|util|rt|pthread|stdc\+\+|selinux|krb5|gssapi_krb5)\.so' | xargs -I {} install  {} $ROOTFS/usr/lib
# ROOTFS/lib/python2.7/config/libpython2.7.so is a symlink to ../../libpython2.7.so,
# so create a valid destination to avoid ldd error due to dangling symlink.
(cd $ROOTFS/lib && ln -sf ../usr/lib/libpython${VERSION}m.so.1.0 libpython$VERSION.so)
echo "$SHLIBS_COUNT"
}

main() {
mkdir -p build/
gcc -o build/python.so python.c -fPIC -shared -lpython${VERSION}m

rm -rf "$ROOTFS"
mkdir -p "$ROOTFS/usr/lib"
mkdir -p "$ROOTFS/lib/python$VERSION"

cp build/python.so "$ROOTFS"
install_shlibs
# TODO /lib64/python2.7/ should not be hardcoded?
#PY_LIB1=/lib64/python$VERSION/
#PY_LIB1=/usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0
PY_LIB1=/usr/lib/python3.5/
rsync -a $PY_LIB1 $ROOTFS/lib/python$VERSION/ --exclude test --exclude unittest \
    --exclude '*.pyc' --exclude '*.pyo' --exclude '*.egg-info'

SHLIBS_COUNT4=`install_shlibs`
echo "Python SHLIBS_COUNT4=$SHLIBS_COUNT4"
SHLIBS_COUNT3=`install_shlibs`
echo "Python SHLIBS_COUNT3=$SHLIBS_COUNT3"
SHLIBS_COUNT2=`install_shlibs`
echo "Python SHLIBS_COUNT2=$SHLIBS_COUNT2"
SHLIBS_COUNT1=`install_shlibs`
echo "Python SHLIBS_COUNT1=$SHLIBS_COUNT1"
if [ $SHLIBS_COUNT1 -ne $SHLIBS_COUNT2 ]
then
	# if this happens, just add additional calls to install_shlibs()
	echo "ERROR some libraries required by python might be missing"
	exit 1
fi
}

main
